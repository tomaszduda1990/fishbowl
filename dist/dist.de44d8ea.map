{"version":3,"sources":["../src/scripts/fish.js","../src/scripts/controls.js","../src/scripts/stats.js","../src/scripts/fishbowl.js","../src/index.js"],"names":["fishTypes","gupik","skalar","neonka","getRandom","min","max","Math","random","type","position","x","y","z","console","log","html","Controls","fishbowl","buttons","forEach","button","dataset","action","addEventListener","add","fish","remove","fishType","fishes","push","render","stats","index","findIndex","splice","Stats","statsContainer","querySelector","sum","reduce","obj","key","renderStats","textContent","Fishbowl","controls","document","querySelectorAll","init","length","map","join","innerHTML","updateStats","updateFishes","bowl"],"mappings":"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","file":"dist.de44d8ea.map","sourceRoot":"..","sourcesContent":["const fishTypes = {\n\tgupik: 'gupik',\n\tskalar: 'skalar',\n\tneonka: 'neonka',\n};\n\nconst getRandom = (min, max) => {\n\tif (min || max) {\n\t\treturn Math.random() * (max - min) + min;\n\t} else {\n\t\tconst num = Math.random() > 0.5 ? 1 : 0;\n\t\treturn num;\n\t}\n};\nexport default type => {\n\tconst position = {\n\t\tx: getRandom(20, 80),\n\t\ty: getRandom(25, 75),\n\t\tz: getRandom(),\n\t};\n\tconsole.log(position);\n\tswitch (type) {\n\t\tcase fishTypes.gupik:\n\t\t\treturn {\n\t\t\t\ttype: fishTypes.gupik,\n\t\t\t\thtml: `<div class=\"${'fish fish--' + fishTypes.gupik}\" style=\"left: ${\n\t\t\t\t\tposition.x\n\t\t\t\t}%; top: ${position.y}%; transform: rotateY(${180 *\n\t\t\t\t\tposition.z}deg);\"></div>`,\n\t\t\t};\n\t\tcase fishTypes.skalar:\n\t\t\treturn {\n\t\t\t\ttype: fishTypes.skalar,\n\t\t\t\thtml: `<div class=\"${'fish fish--' + fishTypes.skalar}\" style=\"left: ${\n\t\t\t\t\tposition.x\n\t\t\t\t}%; top: ${position.y}%; transform: rotateY(${180 *\n\t\t\t\t\tposition.z}deg);\"></div>`,\n\t\t\t};\n\t\tcase fishTypes.neonka:\n\t\t\treturn {\n\t\t\t\ttype: fishTypes.neonka,\n\t\t\t\thtml: `<div class=\"${'fish fish--' + fishTypes.neonka}\" style=\"left: ${\n\t\t\t\t\tposition.x\n\t\t\t\t}%; top: ${position.y}%; transform: rotateY(${180 *\n\t\t\t\t\tposition.z}deg)\"></div>`,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {};\n\t}\n};\n","import fishFunc from './fish';\n\nexport default class Controls {\n\tconstructor(fishbowl, buttons) {\n\t\tthis.fishbowl = fishbowl;\n\t\tthis.buttons = buttons;\n\t\tthis.buttons = buttons;\n\t}\n\tinit() {\n\t\tthis.buttons.forEach(button => {\n\t\t\tif (button.dataset.action === 'add') {\n\t\t\t\tbutton.addEventListener('click', () => this.add(button.dataset.fish));\n\t\t\t} else {\n\t\t\t\tbutton.addEventListener('click', () =>\n\t\t\t\t\tthis.remove(button.dataset.fish)\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\tadd(fishType) {\n\t\tthis.fishbowl.fishes.push(fishFunc(fishType));\n\t\tthis.fishbowl.render();\n\t}\n\tremove(fishType) {\n\t\tif (this.fishbowl.stats[fishType]) {\n\t\t\tconst index = this.fishbowl.fishes.findIndex(\n\t\t\t\tfish => fish.type === fishType\n\t\t\t);\n\t\t\tif (index > -1) {\n\t\t\t\tthis.fishbowl.fishes.splice(index, 1);\n\t\t\t}\n\t\t\tthis.fishbowl.render();\n\t\t}\n\t}\n}\n","export default class Stats {\n\tconstructor(fishbowl, statsContainer) {\n\t\tthis.statsContainer = statsContainer;\n\t\tthis.fishbowl = fishbowl;\n\n\t\tthis.stats = {};\n\t\tthis.skalar = this.statsContainer.querySelector('[data-type=\"skalar\"]');\n\t\tthis.gupik = this.statsContainer.querySelector('[data-type=\"gupik\"]');\n\t\tthis.neonka = this.statsContainer.querySelector('[data-type=\"neonka\"]');\n\t\tthis.sum = this.statsContainer.querySelector('[data-type=\"sum\"]');\n\t}\n\tupdateStats() {\n\t\tthis.stats = this.fishbowl.fishes.reduce((obj, fish) => {\n\t\t\tif (obj[fish.type]) {\n\t\t\t\tobj[fish.type]++;\n\t\t\t} else {\n\t\t\t\tobj[fish.type] = 1;\n\t\t\t}\n\t\t\treturn obj;\n\t\t}, {});\n\t\tlet sum = 0;\n\t\tfor (let key in this.stats) {\n\t\t\tsum += this.stats[key];\n\t\t}\n\t\tthis.stats.sum = sum;\n\t\tthis.renderStats();\n\t}\n\trenderStats() {\n\t\tthis.skalar.textContent = this.stats.skalar ? this.stats.skalar : '0';\n\t\tthis.gupik.textContent = this.stats.gupik ? this.stats.gupik : '0';\n\t\tthis.neonka.textContent = this.stats.neonka ? this.stats.neonka : '0';\n\t\tthis.sum.textContent = this.stats.sum;\n\t}\n}\n","import Controls from './controls';\nimport Stats from './stats';\nexport default class Fishbowl {\n\tconstructor(fishbowl, stats) {\n\t\tthis.fishbowl = fishbowl;\n\t\tthis.controls = new Controls(\n\t\t\tthis,\n\t\t\tdocument.querySelectorAll('.controls__button')\n\t\t);\n\t\tthis.stats = new Stats(this, stats);\n\t\tthis.fishes = [];\n\t}\n\tinit() {\n\t\tthis.controls.init();\n\t}\n\tupdateFishes() {\n\t\tif (this.fishes.length > 0) {\n\t\t\tconst html = this.fishes.map(fish => fish.html).join('');\n\t\t\tthis.fishbowl.innerHTML = html;\n\t\t}\n\t}\n\n\trender() {\n\t\tthis.stats.updateStats();\n\t\tthis.updateFishes();\n\t}\n}\n","import Fishbowl from './scripts/fishbowl';\nimport './style.scss';\n\nconst bowl = document.querySelector('.aquarium__bowl');\nconst stats = document.querySelector('.stats__container');\n\nconst fishbowl = new Fishbowl(bowl, stats);\nfishbowl.init();\n"]}