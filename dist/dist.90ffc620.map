{"version":3,"sources":["../src/index.js","../src/scripts/fish.js","../src/scripts/controls.js","../src/scripts/stats.js","../src/scripts/fishbowl.js"],"names":["fishbowl","fishTypes","getRandom","min","max","Math","random","type","position","x","y","z","console","log","html","Controls","buttons","forEach","button","dataset","action","addEventListener","add","fish","remove","fishType","fishes","push","render","stats","index","findIndex","splice","Stats","statsContainer","skalar","querySelector","gupik","neonka","sum","reduce","obj","key","renderStats","textContent","Fishbowl","controls","document","querySelectorAll","init","length","map","join","innerHTML","updateStats","updateFishes","bowl"],"mappings":"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","file":"dist.90ffc620.map","sourceRoot":"..","sourcesContent":["import Fishbowl from './scripts/fishbowl';\nimport './style.scss';\n\nconst bowl = document.querySelector('.aquarium__bowl');\nconst stats = document.querySelector('.stats__container');\n\nconst fishbowl = new Fishbowl(bowl, stats);\nfishbowl.init();\n","const fishTypes = {\n\tgupik: 'gupik',\n\tskalar: 'skalar',\n\tneonka: 'neonka',\n};\n\nconst getRandom = (min, max) => {\n\tif (min || max) {\n\t\treturn Math.random() * (max - min) + min;\n\t} else {\n\t\tconst num = Math.random() > 0.5 ? 1 : 0;\n\t\treturn num;\n\t}\n};\nexport default type => {\n\tconst position = {\n\t\tx: getRandom(20, 80),\n\t\ty: getRandom(25, 75),\n\t\tz: getRandom(),\n\t};\n\tconsole.log(position);\n\tswitch (type) {\n\t\tcase fishTypes.gupik:\n\t\t\treturn {\n\t\t\t\ttype: fishTypes.gupik,\n\t\t\t\thtml: `<div class=\"${'fish fish--' + fishTypes.gupik}\" style=\"left: ${\n\t\t\t\t\tposition.x\n\t\t\t\t}%; top: ${position.y}%; transform: rotateY(${180 *\n\t\t\t\t\tposition.z}deg);\"></div>`,\n\t\t\t};\n\t\tcase fishTypes.skalar:\n\t\t\treturn {\n\t\t\t\ttype: fishTypes.skalar,\n\t\t\t\thtml: `<div class=\"${'fish fish--' + fishTypes.skalar}\" style=\"left: ${\n\t\t\t\t\tposition.x\n\t\t\t\t}%; top: ${position.y}%; transform: rotateY(${180 *\n\t\t\t\t\tposition.z}deg);\"></div>`,\n\t\t\t};\n\t\tcase fishTypes.neonka:\n\t\t\treturn {\n\t\t\t\ttype: fishTypes.neonka,\n\t\t\t\thtml: `<div class=\"${'fish fish--' + fishTypes.neonka}\" style=\"left: ${\n\t\t\t\t\tposition.x\n\t\t\t\t}%; top: ${position.y}%; transform: rotateY(${180 *\n\t\t\t\t\tposition.z}deg)\"></div>`,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {};\n\t}\n};\n","import fishFunc from './fish';\n\nexport default class Controls {\n\tconstructor(fishbowl, buttons) {\n\t\tthis.fishbowl = fishbowl;\n\t\tthis.buttons = buttons;\n\t\tthis.buttons = buttons;\n\t}\n\tinit() {\n\t\tthis.buttons.forEach(button => {\n\t\t\tif (button.dataset.action === 'add') {\n\t\t\t\tbutton.addEventListener('click', () => this.add(button.dataset.fish));\n\t\t\t} else {\n\t\t\t\tbutton.addEventListener('click', () =>\n\t\t\t\t\tthis.remove(button.dataset.fish)\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\tadd(fishType) {\n\t\tthis.fishbowl.fishes.push(fishFunc(fishType));\n\t\tthis.fishbowl.render();\n\t}\n\tremove(fishType) {\n\t\tif (this.fishbowl.stats[fishType]) {\n\t\t\tconst index = this.fishbowl.fishes.findIndex(\n\t\t\t\tfish => fish.type === fishType\n\t\t\t);\n\t\t\tif (index > -1) {\n\t\t\t\tthis.fishbowl.fishes.splice(index, 1);\n\t\t\t}\n\t\t\tthis.fishbowl.render();\n\t\t}\n\t}\n}\n","export default class Stats {\n\tconstructor(fishbowl, statsContainer) {\n\t\tthis.statsContainer = statsContainer;\n\t\tthis.fishbowl = fishbowl;\n\n\t\tthis.stats = {};\n\t\tthis.skalar = this.statsContainer.querySelector('[data-type=\"skalar\"]');\n\t\tthis.gupik = this.statsContainer.querySelector('[data-type=\"gupik\"]');\n\t\tthis.neonka = this.statsContainer.querySelector('[data-type=\"neonka\"]');\n\t\tthis.sum = this.statsContainer.querySelector('[data-type=\"sum\"]');\n\t}\n\tupdateStats() {\n\t\tthis.stats = this.fishbowl.fishes.reduce((obj, fish) => {\n\t\t\tif (obj[fish.type]) {\n\t\t\t\tobj[fish.type]++;\n\t\t\t} else {\n\t\t\t\tobj[fish.type] = 1;\n\t\t\t}\n\t\t\treturn obj;\n\t\t}, {});\n\t\tlet sum = 0;\n\t\tfor (let key in this.stats) {\n\t\t\tsum += this.stats[key];\n\t\t}\n\t\tthis.stats.sum = sum;\n\t\tthis.renderStats();\n\t}\n\trenderStats() {\n\t\tthis.skalar.textContent = this.stats.skalar ? this.stats.skalar : '0';\n\t\tthis.gupik.textContent = this.stats.gupik ? this.stats.gupik : '0';\n\t\tthis.neonka.textContent = this.stats.neonka ? this.stats.neonka : '0';\n\t\tthis.sum.textContent = this.stats.sum;\n\t}\n}\n","import Controls from './controls';\nimport Stats from './stats';\nexport default class Fishbowl {\n\tconstructor(fishbowl, stats) {\n\t\tthis.fishbowl = fishbowl;\n\t\tthis.controls = new Controls(\n\t\t\tthis,\n\t\t\tdocument.querySelectorAll('.controls__button')\n\t\t);\n\t\tthis.stats = new Stats(this, stats);\n\t\tthis.fishes = [];\n\t}\n\tinit() {\n\t\tthis.controls.init();\n\t}\n\tupdateFishes() {\n\t\tif (this.fishes.length > 0) {\n\t\t\tconst html = this.fishes.map(fish => fish.html).join('');\n\t\t\tthis.fishbowl.innerHTML = html;\n\t\t}\n\t}\n\n\trender() {\n\t\tthis.stats.updateStats();\n\t\tthis.updateFishes();\n\t}\n}\n"]}